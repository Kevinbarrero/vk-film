// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: actor.sql

package db

import (
	"context"
	"database/sql"
)

const createActor = `-- name: CreateActor :one
INSERT INTO actors (
  name,
  gender,
  birthday
) VALUES 
  ($1, $2, $3) RETURNING id, name, gender, birthday
`

type CreateActorParams struct {
	Name     string       `json:"name"`
	Gender   string       `json:"gender"`
	Birthday sql.NullTime `json:"birthday"`
}

func (q *Queries) CreateActor(ctx context.Context, arg CreateActorParams) (Actor, error) {
	row := q.db.QueryRowContext(ctx, createActor, arg.Name, arg.Gender, arg.Birthday)
	var i Actor
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Gender,
		&i.Birthday,
	)
	return i, err
}
